---
const errors = { formnama: ""};

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const nama = data.get("formnama");
    const jumlah = data.get("formjumlah");
    if (typeof nama !== "string" || nama.length < 1) {
    errors.formnama += "Please enter a username. ";
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

//const myURL = Astro.locals.runtime.env.NOCO_URL;
//const myTOK = Astro.locals.runtime.env.NOCO_TOK;
const myURL = "https://app.nocodb.com/api/v2/tables/mj9yvft5vib78kp/records";
const myTOK = "RzPMz79xLsGvt0YBpZ-XnQ0YGIBeFtzx10oW-rvT";
const { undangan } = Astro.params;
---

<form method="POST">
  
  <label>Nama Undangan: 
    <input type="text" name="formnama" value=`${undangan}` required/>
  </label>
  {errors.formnama && <p>{errors.formnama}</p>}
  <label>Jumlah Undangan: 
    <select name="formjumlah" required>
      <option value="1">1</option>
      <option value="2">2</option>
    </select>
  </label>
  <button>SUBMIT</button>
</form>

<noco-attr
    data-url={myURL}
    data-tok={myTOK}>
</noco-attr>


<script>
  class NocoTest extends HTMLElement {
    connectedCallback() {
      const url = this.dataset.url;
      const tok = this.dataset.tok;
      const options = {
        method: 'GET',
        headers: {
          'xc-token': tok
        }
      };

      fetch(url, options)
        .then(response => response.json())
        .then(response => console.log(response))
        .catch(err => console.error(err));
    }
  }
  customElements.define('noco-attr', NocoTest);
  //  const response = await fetch("https://app.nocodb.com/api/v2/tables/m7w29ys11yjrtsv/records",
  //    {
  //      method: 'GET',
  //      headers: {
  //        'xc-token': 'RzPMz79xLsGvt0YBpZ-XnQ0YGIBeFtzx10oW-rvT'
  //      },
  //    });
  //  const json = await response.json();
  //  console.log(json.list[0].namaundangan);
</script>

